How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It quickly reveals were changes had occured.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    There is a record of what changes have been made, and provides a rollback.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The versions saved are more likely to be productive.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Sometimes, multiple files are directly related, so changes are convenient
	to track togethor at times.

How can you use the commands git log and git diff to view the history of files?

    Log shows change history, dif shows changes between versions, specifically insertions and deletions.

How might using version control make you more confident to make changes that
could break something?

    Changes a tracable, and old versions can be quickly reverted too.

Now that you have your workspace set up, what do you want to try using Git for?

    What mt practise does anyway but more efficiently.